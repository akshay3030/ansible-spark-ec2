---
# tasks file for create_spark_cluster
- include: security_groups.yml

- name: get the ubuntu trusty AMI
  ec2_ami_search: distro=ubuntu release=trusty virt=hvm region={{ region }}
  register: ubuntu_image
  tags: always

- name: start the spark master
  ec2:
    image: "{{ ubuntu_image.ami }}"
    region: "{{ region }}"
    instance_type: "{{ instance_type }}"
    profile: "{{ boto_profile }}"
    key_name: dsteam
    group: [web, ssh, outbound, spark, hadoop]
    instance_tags: { Name: spark_master, ds_tech: spark, ds_role: spark_master }
    exact_count: 1
    count_tag: { ds_role: spark_master }
    wait: yes
  register: spark_master
  tags: always

- name: start the spark slaves
  ec2:
    image: "{{ ubuntu_image.ami }}"
    region: "{{ region }}"
    instance_type: "{{ instance_type }}"
    profile: "{{ boto_profile }}"
    key_name: dsteam
    group: [web, ssh, outbound, spark, hadoop]
    instance_tags: { Name: spark_slave, ds_tech: spark, ds_role: spark_slave }
    exact_count: "{{ slave_count }}"
    count_tag: { ds_role: spark_slave }
    wait: yes
  register: spark_slave
  tags: always

- name: wait for ssh server to be running
  wait_for: host={{ item.public_dns_name }} port=22 search_regex=OpenSSH
  when: item.public_dns_name is defined
  with_items: "{{ spark_master.tagged_instances }}"
  tags: always

- name: wait for ssh server to be running
  wait_for: host={{ item.public_dns_name }} port=22 search_regex=OpenSSH
  when: item.public_dns_name is defined
  with_items: "{{ spark_slave.tagged_instances }}"
  tags: always
